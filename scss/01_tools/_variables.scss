
/* Set Initial grid values
   'fixed' means it is a fixed numerical value
*********************************** */
$grid_sizingUnit:rem;

// Set the total amount of columns in grid
$grid_columnCount: 12;

// Set the pixel width of columns
// $grid_columnWidth: 57; // SET THIS UNIT in px
$grid_columnWidth: 76; // SET THIS UNIT in px
$grid_columnWidth_rem: math.div($grid_columnWidth, 16); // converted to rem

// Set the pixel width of gutters
$grid_gutterWidth: 40; // SET THIS UNIT in px
$grid_gutterWidth_rem: math.div($grid_gutterWidth, 16); // converted to rem
$grid_gutterWidth_remUnit: #{$grid_gutterWidth_rem}rem;

$grid_gutterWidth--mobile:26;


$grid_columnsWidth: $grid_columnCount * $grid_columnWidth_rem; // width of all columns in the grid is equal to column count times width of a column
$grid_guttersWidth: ($grid_columnCount * $grid_gutterWidth_rem) - $grid_gutterWidth_rem; // width of all gutters in the grid is equal to column count times width of a gutter, minus one gutter (gutters are always internal)
$grid_totalWidth: $grid_columnsWidth + $grid_guttersWidth; // total width of grid is equal to width of columns plus gutters
$grid_maxWidth: unquote( "#{$grid_totalWidth}#{$grid_sizingUnit}" ); // suffix the sizing unit on the fixed value: Max width of the grid as a fixed value with sizing unit

$width__minSiteWidth_PX: 320px; // The minimum width of the site

$gridGap:clamp(1.625rem, 2.7586206897vw, 2.5rem); // calculated with:
// @include clamp(
//     grid-gap, 
//     $grid_gutterWidth--mobile, 
//     $grid_gutterWidth, 
//     1450
// );
$gridRowGapLarge:clamp(2.4375rem, 4.1379310345vw, 3.75rem); // calculated with:
// @include clamp(
//     grid-gap, 
//     39, 
//     60,
//     1450
//   );


/* 	Fonts – Specfics
    These are not to be used directly in styling,
    please use the generic values further below!
*********************************** */
$font__helvetica: Helvetica, Arial, sans-serif; // INITAL/UNSET
// 400, 400 italic, 700, 900

/* 	Fonts – Generic values
    Use these values in styling!
*********************************** */
$font__body: $font__helvetica; // INITAL/UNSET
$font__heading: $font__helvetica; // INITAL/UNSET






/*	Size variables
***********************************  */
$width__icon_button--mobile: 2rem; // INITAL/UNSET
$width__icon_button--desktop: 2rem; // INITAL/UNSET

$borderWidth__standard:thin; // INITAL/UNSET

$lineHeight__tag_normal: 1.2em; // INITAL/UNSET


/*	Transition variables
***********************************  */
$ease__outSine:cubic-bezier(0.39, 0.575, 0.565, 1);
$ease__easeOutQuint: cubic-bezier(0.23, 1, 0.32, 1);

$slidingOverlayTransition: 0.3s $ease__outSine; // INITAL/UNSET

$time__delay_step1:0.35s; // INITAL/UNSET
$time__delay_step2:0.75s; // INITAL/UNSET

$time__animateIntoViewport_standardElementAppear: 1s; // INITAL/UNSET

/*	Selector variables
***********************************  */
// $selector__first_lev_is_on_sectional_page:'body.x &'; // INITAL/UNSET

// $selector__section_has_bg_color:'section.x'; // INITAL/UNSET
// $selector__first_lev_is_on_color_bg_section:'section.x &'; // INITAL/UNSET

// $selector__first_lev_is_on_content_page:'body.frontend_nodetype--content &'; // INITAL/UNSET

// $selector__has_header_over_image:'.page-standard.has_banner'; // INITAL/UNSET
// $selector__first_lev_has_header_over_image:'.page-standard.has_banner &'; // INITAL/UNSET
